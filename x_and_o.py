P = {'11':'-','21':'-','31':'-','12':'-', '22':'-', '32': '-','13':'-', '23':'-', '33':'-',} # словать для хранениязначений поля

# вывод поля
def show_pole():

    print("  1 2 3")
    print("1 %c %c %c" % (P['11'], P['21'], P['31']))
    print("2 %c %c %c" % (P['12'], P['22'], P['32']))
    print("3 %c %c %c" % (P['13'], P['23'], P['33']))
    print('---------------------')

# запрос хода крестиком
def Igrok_1():

    while True: # цикл для проверки правильности ввода
        vvod = None
        vvod = int(input("Игрок 1, введите № столбца и строки без пробела чтобы поставить Х :"))
        print(vvod)
        check = str(vvod)
        if check in P: # проверка правильности ввода координаты по Х
            if P[check] == '-': # проверка на занятость ячейки
                print('ура эта ячейка %c пуста' % (P[check]))
                return vvod
            else:
                print('Эта ячейка уже занята')
        else:
            print("вы ввели недопустимое знавение координаты!\nВведите координаты с 1 до 3-х:")



# запрос хода ноликом
def Igrok_2():

    while True: # цикл для проверки правильности ввода
        vvod = None
        vvod = int(input("Игрок 2, введите № столбца и строки без пробела чтобы поставить O :"))
        print(vvod)
        check = str(vvod)
        if check in P:  # проверка правильности ввода координаты по Х
            if P[check] == '-':  # проверка на занятость ячейки
                print('ура эта ячейка %c пуста' % (P[check]))
                return vvod
            else:
                print('Эта ячейка уже занята')
        else:
            print("вы ввели недопустимое знавение координаты!\nВведите координаты с 1 до 3-х:")

def win_check(name): # проверки выйгрышных ситуаций
         if (P['11']  == P['12'] == P['13']) and (P['11']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif (P['21']  == P['22'] == P['23']) and (P['21']  !=  '-'):
               print('Игрок %s выйграл' % (name))
               return True

         elif (P['31'] == P['32'] == P['33']) and (P['31']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif (P['11'] == P['21'] == P['31']) and (P['11']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif (P['12'] == P['22'] == P['32']) and (P['12']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif (P['13'] == P['23'] == P['33']) and (P['13']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif (P['11'] == P['22'] == P['33']) and (P['11']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif (P['31'] == P['22'] == P['13']) and (P['31']  !=  '-'):
              print('Игрок %s выйграл' % (name))
              return True

         elif '-' not in P.values():
              print('Ничья!')
              print('---------------------')
              return True

         else:
            print('---------------------')

while True:

    show_pole() # показываем поле
    hod_x = str(Igrok_1()) # делаем запрос хода крестиком
    print("Игрок 1, ваш ход",hod_x)
    P[hod_x] = 'X' # ставим Х в ячейку

    if win_check('Игрок 1'): # проверяем на выйгрыш или ничью, если True ещ конец программы
        show_pole()
        break


    show_pole() # показываем поле
    hod_o = str(Igrok_2())  # делаем запрос хода ноликом
    print("Игрок 2, ваш ход", hod_o)
    P[hod_o] = 'O' #ставим 0 в ячейку

    if win_check('Игрок 2'): # проверяем на выйгрыш или ничью, если True ещ конец программы
        show_pole()
        break
